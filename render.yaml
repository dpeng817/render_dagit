services:
  - type: web
    name: dagit
    env: python
    buildCommand: "pip install -r requirements.txt"
    startCommand: "dagit -f repo.py -p 80 -h 0.0.0.0"
    envVars:
      - key: DAGSTER_HOME
        value: /opt/render/project/src
      - key: DAGSTER_POSTGRES_DB
        fromDatabase:
          name: dagster_db
          property: database
      - key: DAGSTER_POSTGRES_HOSTNAME
        fromDatabase:
          name: dagster_db
          property: host
      - key: DAGSTER_POSTGRES_PASSWORD
        fromDatabase:
          name: dagster_db
          property: password
      - key: DAGSTER_POSTGRES_USER
        fromDatabase:
          name: dagster_db
          property: user
      - key: PORT
        value: 80
  - type: worker
    name: daemon
    env: python
    buildCommand: "pip install -r requirements.txt"
    startCommand: "dagster-daemon run"
    envVars:
      - key: DAGSTER_HOME
        value: /opt/render/project/src
      - key: DAGSTER_POSTGRES_DB
        fromDatabase:
          name: dagster_db
          property: database
      - key: DAGSTER_POSTGRES_HOSTNAME
        fromDatabase:
          name: dagster_db
          property: host
      - key: DAGSTER_POSTGRES_PASSWORD
        fromDatabase:
          name: dagster_db
          property: password
      - key: DAGSTER_POSTGRES_USER
        fromDatabase:
          name: dagster_db
          property: user
      - key: PORT
        value: 80
databases:
  - name: dagster_db
    databaseName: dagster
    ipAllowList: [] # Only allow internal connections
